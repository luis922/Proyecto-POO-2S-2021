@startuml
skinparam sequenceMessageAlign center
Main "0..1" -> "0..*" VideoClub : Contiene
Main "0..1" -> "0..*" Pelicula: Utiliza
Main "0..1" -> "0..*" Cliente: Usa
Main "0..1" -> "0..*" Funciones: Llama
Main "0..1" -> "0..1" MenuTienda: Invoca

VideoClub "1..*" -> "0..*"  Cliente: Atiende
VideoClub "1" -> "1..*"  Pelicula:  Posee
Cliente "1" -> "0..*" Arriendo: Accede
MenuTienda "1" -> "1..*" Funciones: Invoca




class VideoClub{
    -String  nombreTienda
    -String  direccion
    -ArrayList<Pelicula> listaPeliculas
    -ArrayList<Cliente>   listaClientes
    -HashMap<String,Pelicula> pelisXId
    -HashMap<String,Cliente> clientesXRut
    __
    .. Constructor ..
    +VideoClub()
    .. Setter/Getter..
    +String getNombreTienda()
    +void setNombreTienda(String nombreTienda)
    +String getDireccion()
    +void setDireccion(String direccion)
    .. Agregar a colecciones ..
    +void addPeliToListaPelis(Pelicula peli)
    +void addClientToListaClients( Cliente cliente)
    +void addClientToClientXRut(String rut, Cliente cliente)
    +void addPeliToPelisXId(String id, Pelicula peli)
    .. Mostrar datos por pantalla..
    +void mostrarDatosClientes()
    +void mostrarDatosClientes(String rut)
    +void mostrarDatosPeliculas()
    +void mostrarDatosPeliculas(String id)
    .. Obtener elementos de colecciones..
    +Cliente getClientFromClientXRut(String rut)
    +Pelicula getPeliFromPelisXId(String id)
    .. Otros métodos ..
    +boolean containsID(String id)
    +boolean containsRUT(String rut)
    +boolean existID(String id)
    +boolean existRUT(String rut)
    +String obtenerIdXNombre(String nombre)
    +int getSize(int modo)
    +void delPelicula(String id)
    +void delCliente(String rut)
    + String peliMejorEvaluada()
    + String peliMejorEvaluada(String genero)
    + bollean constainsGenero(String id, String genero)
    + void escribirArchivoDeudores()
    + void escribirArriendosActuales()
}

class Cliente extends Persona implements Transacciones {
    - ArrayList<Arriendo> historialArriendos; //Coleccion de objetos 1 anidación.
    - HashMap<String, Arriendo> historialXid;
    __
    ..Constructor..
    +Cliente()
    +Cliente(String nombre, String rut)
    ..Setter/Getter..
    +void addArriendoToHistorial(Arriendo arriendo)
    + Arriendo getArriendoXId(String id)
    + Arriendo getArriendo(int i)
    + Arriendo getHistorialXId(String id)
    ..Otros métodos..
    +void addToHistorialXid(Arriendo arriendo)
    +void addToHistorial(Arriendo arriendo)
    +void addToArriendosActuales(Arriendo arriendo)
    +void addToArriendoXid(Arriendo arriendo)
    +void mostrarHistorial(VideoClub tienda)
    +void mostrarHistorial(String id)
    +String retornarHistorialCliente(VideoClub tienda)
    +boolean isEmptyArriendo()
    +boolean existIDHistorial(String id)
    +boolean existIDArriendo(String id)
    +int getSize(int modo)
    +int contarGeneroEnHistorial(VideoClub tienda, String genero)
    +String generoMasVisto(VideoClub tienda)
    + void identificacion()
    + void arrendar(VideoClub tienda)
    + void devolverArriendo(VideoClub tienda)
    + void pagarDeuda(VideoClub tienda)
}

class Trabajador extends Persona implements Transacciones{
    - String cargo;
    - int sueldo;
    - int vecesArriendosAtrasados;
    __
    ..Constructor..    
    + Trabajador()
    ..Setter/Getter..
    + void setCargo(String cargo)
    + void setSueldo(int sueldo)
    + void setVecesArriendosAtrasados(int veces)
    + String getCargo()
    + int getSueldo()
    + int setVecesArriendosAtrasados()
    ..Otros métodos..
    + void arrendar(VideoClub tienda)
    + void devolverArriendo(VideoClub tienda)
    + void pagarDeuda(VideoClub tienda)
    + void identificacion()
}

abstract class Persona{
    # String nombre
    # String rut
    # int deuda
    # ArrayList<Arriendo> arriendosActuales
    __
    ..Constructor..
    + Persona()
    + Persona(String nombre, String rut)
    ..Setter/Getter..
     + String getNombre()
     + void setNombre(String nombre)
     + String getRut()
     + void setRut(String rut)
     + int getDeuda()
     + void setDeuda(int deuda)
     + Arriendo getArriendoXId(String id)
     + Arriendo getArriendo(int i)
    ..Otros métodos..
     + void addToArriendosActuales(Arriendo arriendo)
     + void addToArriendosXid(Arriendo arriendo)
     + boolean isEmptyArriendos()
     + boolean existIDArriendo(String id)
     + void delArriendo(String id)
     + Arriendo delArriendo2(String id)
    ..Método abstracto..
     + abstract void identificacion();
}

class Pelicula{
    -String nombre
    -String id
    -short existencias
    -short disponibles
    -float valuacion
    -short cantValuaciones
    -short añoEstreno
    -short duraciónMin
    -String sinopsis
    -String calidad
    -String director[]
    -String actores[]
    -String generos[]
    __
    ..Constructor..
    +Pelicula()
    ..Setter/Getter..
    +String getNombre()
    +void setNombre(String nombre)
    +String getId()
    +void setId(String id)
    +short getExistencias()
    +void setExistencias(short existencias)
    +short getDisponibles()
    +void setDisponibles(short disponibles)
    +float getValuacion()
    +void setValuacion(float valuacion)
    +short getCantValuaciones()
    +void setCantValuaciones(short cantValuaciones)
    +short getAñoEstreno()
    +void setAñoEstreno(short añoEstreno)
    +short getDuraciónMin()
    +void setDuraciónMin(short duraciónMin)
    +String getSinopsis()
    +void setSinopsis(String sinopsis)
    +String getCalidad()
    +void setCalidad(String calidad)
    +String[] getDirector()
    +void setDirector(String[] directores)
    +String[] getActores()
    +void setActores(String[] actor)
    +String[] getGeneros()
    +void setGeneros(String[] genero)
}

interface Transacciones{
    + void arrendar(VideoClub tienda);
    + void devolverArriendo(VideoClub tienda);
    + void pagarDeuda(VideoClub tienda);
}


class Arriendo{
    -String id
    -float valoracion
    -LocalDate fechaArriendo
    -LocalDate fechaEntrega
    -boolean entregado
    -int vecesArrendada
    __
    ..Constructor..
    +Arriendo()
    ..Setter/Getter..
    +String getId()
    +void setId(String id)
    +float getValoracion()
    +void setValoracion(float valoracion)
    +LocalDate getFechaArriendo()
    +void setFechaArriendo(LocalDate fechaArriendo)
    +LocalDate getFechaEntrega()
    +void setFechaEntrega(LocalDate fechaEntrega)
    +void setEntregado(boolean entregado)
    +void setVecesArrendada(int vecesArrendada)
    +int getVecesArrendada()
    ..Otros métodos..
    +boolean isEntregado()
    +int getVecesArrendada()
}

class Main{
    + static void main(String[] args)
}

class MenuTienda{
    + static void inicioMenu(VideoClub tienda)
    + static void menúCliente(String usuario,VideoClub x)
    + static void menúAdmin(VideoClub x)
    + static void menúEdiciónPelicula(VideoClub tienda)
    + static void menúEdiciónCliente(VideoClub tienda)
}

class Funciones{
    + static String loginClientes(VideoClub x)
    + static boolean formatoCorrectoRut(String rut)
    + static boolean formatoCorrectoValuacion(float Valuacion)
    + static String loginPelicula(VideoClub x)
    + static void listaPeliculas(VideoClub x)
    + static void listaClientes(VideoClub x)
    + static void mostrarHistorialCliente(VideoClub x, String rut)
    + static void mostrarHistorialCliente(VideoClub x)
    + static void mostrarHistorialPeli(VideoClub x, String rut)
    + static void registrarCliente(VideoClub x)
    + static void registrarPelicula(VideoClub x)
    + static void registrarHistorial(VideoClub x)
    + static String[] ingresoDirectores(Scanner teclado)
    + static String[] ingresoGeneros(Scanner teclado)
    + static String[] ingresoActores(Scanner teclado)
    + static float ingresoValuacion(Scanner teclado)
    + static void buscarPelicula(VideoClub x)
    + static void desplegarMiFicha(VideoClub x, String usuario)
    + static void buscarCliente(VideoClub x)
    + static void LeerArchivoClientes(VideoClub videoClub)
    + static void LeerArchivoPeliculas(VideoClub videoClub)
    + static void eliminarPelicula(VideoClub x)
    + static void eliminarCliente(VideoClub x)
    + static Arriendo nuevoArriendo(VideoClub tienda, String rut)
    + static void arrendar(VideoClub tienda, String rut)
    + static void arrendar(VideoClub tienda)
    + static void devolverArriendo((VideoClub tienda, String rut)
    + static void devolverArriendo((VideoClub tienda)
    + static void pagarDeuda( Cliente cliente)
    + static void pagarDeuda(VideoClub tienda)
}





@enduml
